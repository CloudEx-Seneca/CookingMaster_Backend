// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5

package handler

import (
	"net/http"

	user "CookingMaster_Backend/app/usercenter/api/internal/handler/user"
	"CookingMaster_Backend/app/usercenter/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/logout",
				Handler: user.LogoutHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/passwordreset",
				Handler: user.PasswordResetHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/refreshtoken",
				Handler: user.RefreshTokenHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/register",
				Handler: user.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/resetpassword",
				Handler: user.ResetPasswordHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user/varifyregister",
				Handler: user.VarifyRegisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/usercenter/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/avatarupload",
				Handler: user.AvatarUploadHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/detail",
				Handler: user.UserDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/update",
				Handler: user.UserUpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/usercenter/v1"),
	)
}
